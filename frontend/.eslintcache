[{"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\index.js":"1","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\App.js":"2","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\HomeScreen.js":"3","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\LoginScreen.js":"4","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\components\\FormContainer.js":"5","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\SignupScreen.js":"6","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\store.js":"7","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\reducers\\UserReducers.js":"8","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\constants\\UserConstants.js":"9","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\actions\\userActions.js":"10","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\components\\Header.js":"11","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\ProfileScreen.js":"12","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\components\\Post.js":"13","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\index.js":"14","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\store.js":"15","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\App.js":"16","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\reducers\\UserReducers.js":"17","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\components\\Header.js":"18","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\screens\\LoginScreen.js":"19","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\screens\\SignupScreen.js":"20","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\screens\\ProfileScreen.js":"21","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\screens\\HomeScreen.js":"22","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\constants\\UserConstants.js":"23","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\components\\FormContainer.js":"24","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\components\\Post.js":"25","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\actions\\userActions.js":"26"},{"size":333,"mtime":1609852579162,"results":"27","hashOfConfig":"28"},{"size":861,"mtime":1609852584510,"results":"29","hashOfConfig":"28"},{"size":1499,"mtime":1609879461814,"results":"30","hashOfConfig":"28"},{"size":2222,"mtime":1609922311910,"results":"31","hashOfConfig":"28"},{"size":397,"mtime":1609855186230,"results":"32","hashOfConfig":"28"},{"size":3703,"mtime":1608815504587,"results":"33","hashOfConfig":"28"},{"size":1205,"mtime":1608815759565,"results":"34","hashOfConfig":"28"},{"size":2165,"mtime":1608813265617,"results":"35","hashOfConfig":"28"},{"size":778,"mtime":1608813106944,"results":"36","hashOfConfig":"28"},{"size":3700,"mtime":1608815456153,"results":"37","hashOfConfig":"28"},{"size":1883,"mtime":1609926404575,"results":"38","hashOfConfig":"28"},{"size":3977,"mtime":1608728676525,"results":"39","hashOfConfig":"28"},{"size":792,"mtime":1609879418592,"results":"40","hashOfConfig":"28"},{"size":349,"mtime":1609952337514,"results":"41","hashOfConfig":"42"},{"size":1205,"mtime":1609952337530,"results":"43","hashOfConfig":"42"},{"size":890,"mtime":1609952337474,"results":"44","hashOfConfig":"42"},{"size":2165,"mtime":1609952337514,"results":"45","hashOfConfig":"42"},{"size":1883,"mtime":1609952337498,"results":"46","hashOfConfig":"42"},{"size":2214,"mtime":1610022271096,"results":"47","hashOfConfig":"42"},{"size":3703,"mtime":1609952337530,"results":"48","hashOfConfig":"42"},{"size":3966,"mtime":1610022298174,"results":"49","hashOfConfig":"42"},{"size":1469,"mtime":1610022246999,"results":"50","hashOfConfig":"42"},{"size":778,"mtime":1609952337506,"results":"51","hashOfConfig":"42"},{"size":397,"mtime":1609952337490,"results":"52","hashOfConfig":"42"},{"size":824,"mtime":1610021107744,"results":"53","hashOfConfig":"42"},{"size":3700,"mtime":1609952337490,"results":"54","hashOfConfig":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1tcpp2b",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"qw6ju5",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"89"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"89"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\index.js",[],["118","119"],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\App.js",[],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\HomeScreen.js",["120","121"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Post from '../components/Post'\r\n\r\nconst HomeScreen = () => {\r\n    const [posts, setPosts] = useState([\r\n        {\r\n            username: \"charliefinos\",\r\n            caption: \"sunny day\",\r\n            imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/b/b7/ETHEREUM-YOUTUBE-PROFILE-PIC.png\"\r\n        },\r\n        {\r\n            username: \"marcoantonio\",\r\n            caption: \"que onda lorooo\",\r\n            imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/b/b7/ETHEREUM-YOUTUBE-PROFILE-PIC.png\"\r\n        },\r\n        {\r\n            username: \"kurtcobain\",\r\n            caption: \"wsuuup dude\",\r\n            imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/b/b7/ETHEREUM-YOUTUBE-PROFILE-PIC.png\"\r\n        }\r\n    ])\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo === null) {\r\n            history.push('/login')\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            {posts.map(post => (\r\n                <Post\r\n                    username={post.username}\r\n                    caption={post.caption}\r\n                    imageUrl={post.imageUrl} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\LoginScreen.js",["122"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push('/')\r\n        }\r\n    }, [userInfo, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n\r\n        <FormContainer>\r\n            <h1>Log In</h1>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Login\r\n                    </Button>\r\n            </Form>\r\n            <Row>\r\n                <Col>\r\n                    Are you new here?{' '}<Link to='/signup'>Signup</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\SignupScreen.js",["123","124"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\nconst SignupScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Password do not Match')\r\n        } else {\r\n            dispatch(register(\r\n                name,\r\n                email,\r\n                password\r\n            ))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push('/')\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <FormContainer>\r\n                <h1>Sign Up</h1>\r\n\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter Name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                        <p2 style={{ color: 'red' }}>{message}</p2>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Register\r\n                    </Button>\r\n                </Form>\r\n                <Row>\r\n                    <Col className='mt-2'>\r\n                        Already have an account?{' '}<Link to='/login'>Login</Link>\r\n                    </Col>\r\n                </Row>\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignupScreen\r\n","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\store.js",[],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\reducers\\UserReducers.js",[],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\constants\\UserConstants.js",[],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\components\\Header.js",["125","126","127"],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\ProfileScreen.js",["128","129","130","131","132"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\n\r\n\r\n\r\nconst ProfileScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = () => {\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Col>\r\n            <FormContainer>\r\n                <h1>Profile</h1>\r\n                {success && <h1>{success}</h1>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter New Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmpassword'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n\r\n            </FormContainer>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\components\\Post.js",["133"],"import React from 'react'\r\nimport './Post.css'\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nconst Post = ({ username, caption, imageUrl }) => {\r\n    return (\r\n        <div className=\"post\" >\r\n            <div className=\"post__header\">\r\n                <Avatar\r\n                    className=\"post__avatar\"\r\n                    alt={username}\r\n                    src=\"\">\r\n                </Avatar>\r\n                <h3>{username}</h3>\r\n            </div>\r\n\r\n            {/*Image*/}\r\n            <img\r\n                className=\"post__image\"\r\n                src={imageUrl}></img>\r\n\r\n            {/*Username + Caption*/}\r\n            {caption &&\r\n                <h4 className=\"post__text\"><strong>{username}</strong>{' '}{caption}</h4>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\index.js",[],["134","135"],"C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\store.js",[],"C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\App.js",[],"C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\reducers\\UserReducers.js",[],"C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\components\\Header.js",["136","137","138"],"import React, { useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../actions/userActions'\r\nimport { Button, NavDropdown } from 'react-bootstrap'\r\n\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const loginHandler = () => {\r\n        history.push('/login')\r\n    }\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        history.push('/login')\r\n    }\r\n    const toggleHandler = () => {\r\n        setToggle(!toggle)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to='/'>\r\n                <img\r\n                    className=\"app__headerImage\"\r\n                    src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\r\n                    alt=\"\"\r\n                />\r\n            </Link >\r\n            {userInfo ? (\r\n                <div className=\"header__right\">\r\n                    <NavDropdown title={userInfo.name}>\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </div>\r\n            ) : (\r\n                    <div className=\"header__right\">\r\n                        <a type=\"button\" to='/signup'> Signup</a>\r\n                        <LinkContainer to='/login'><Button variant=\"primary\"  >Login</Button></LinkContainer>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\screens\\SignupScreen.js",["139","140"],"C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\screens\\ProfileScreen.js",["141","142","143"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\n\r\n\r\n\r\nconst ProfileScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = () => {\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Col>\r\n            <FormContainer>\r\n                <h1>Profile</h1>\r\n                {success && <h1>{success}</h1>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter New Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmpassword'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n\r\n            </FormContainer>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\screens\\HomeScreen.js",["144","145"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Post from '../components/Post'\r\n\r\nconst HomeScreen = () => {\r\n    const [posts, setPosts] = useState([\r\n        {\r\n            username: \"charliefinos\",\r\n            caption: \"sunny day\",\r\n            imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/b/b7/ETHEREUM-YOUTUBE-PROFILE-PIC.png\"\r\n        },\r\n        {\r\n            username: \"marcoantonio\",\r\n            caption: \"que onda lorooo\",\r\n            imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/b/b7/ETHEREUM-YOUTUBE-PROFILE-PIC.png\"\r\n        },\r\n        {\r\n            username: \"kurtcobain\",\r\n            caption: \"wsuuup dude\",\r\n            imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/b/b7/ETHEREUM-YOUTUBE-PROFILE-PIC.png\"\r\n        }\r\n    ])\r\n\r\n    \r\n    const history = useHistory()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo === null) {\r\n            history.push('/login')\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            {posts.map(post => (\r\n                <Post\r\n                    username={post.username}\r\n                    caption={post.caption}\r\n                    imageUrl={post.imageUrl} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\constants\\UserConstants.js",[],"C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\components\\Post.js",[],"C:\\Users\\Charlie\\Desktop\\social-media\\frontend\\src\\actions\\userActions.js",[],["146","147"],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":7,"column":19,"nodeType":"154","messageId":"155","endLine":7,"endColumn":27},{"ruleId":"152","severity":1,"message":"156","line":25,"column":11,"nodeType":"154","messageId":"155","endLine":25,"endColumn":19},{"ruleId":"152","severity":1,"message":"157","line":16,"column":13,"nodeType":"154","messageId":"155","endLine":16,"endColumn":20},{"ruleId":"152","severity":1,"message":"157","line":20,"column":13,"nodeType":"154","messageId":"155","endLine":20,"endColumn":20},{"ruleId":"152","severity":1,"message":"158","line":20,"column":22,"nodeType":"154","messageId":"155","endLine":20,"endColumn":27},{"ruleId":"152","severity":1,"message":"159","line":19,"column":11,"nodeType":"154","messageId":"155","endLine":19,"endColumn":23},{"ruleId":"152","severity":1,"message":"160","line":26,"column":11,"nodeType":"154","messageId":"155","endLine":26,"endColumn":24},{"ruleId":"161","severity":1,"message":"162","line":49,"column":25,"nodeType":"163","endLine":49,"endColumn":55},{"ruleId":"152","severity":1,"message":"164","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":14},{"ruleId":"152","severity":1,"message":"165","line":4,"column":24,"nodeType":"154","messageId":"155","endLine":4,"endColumn":27},{"ruleId":"152","severity":1,"message":"166","line":18,"column":12,"nodeType":"154","messageId":"155","endLine":18,"endColumn":19},{"ruleId":"152","severity":1,"message":"157","line":21,"column":13,"nodeType":"154","messageId":"155","endLine":21,"endColumn":20},{"ruleId":"152","severity":1,"message":"158","line":21,"column":22,"nodeType":"154","messageId":"155","endLine":21,"endColumn":27},{"ruleId":"167","severity":1,"message":"168","line":18,"column":13,"nodeType":"163","endLine":20,"endColumn":32},{"ruleId":"148","replacedBy":"169"},{"ruleId":"150","replacedBy":"170"},{"ruleId":"152","severity":1,"message":"159","line":19,"column":11,"nodeType":"154","messageId":"155","endLine":19,"endColumn":23},{"ruleId":"152","severity":1,"message":"160","line":26,"column":11,"nodeType":"154","messageId":"155","endLine":26,"endColumn":24},{"ruleId":"161","severity":1,"message":"162","line":49,"column":25,"nodeType":"163","endLine":49,"endColumn":55},{"ruleId":"152","severity":1,"message":"157","line":20,"column":13,"nodeType":"154","messageId":"155","endLine":20,"endColumn":20},{"ruleId":"152","severity":1,"message":"158","line":20,"column":22,"nodeType":"154","messageId":"155","endLine":20,"endColumn":27},{"ruleId":"152","severity":1,"message":"166","line":18,"column":12,"nodeType":"154","messageId":"155","endLine":18,"endColumn":19},{"ruleId":"152","severity":1,"message":"157","line":21,"column":13,"nodeType":"154","messageId":"155","endLine":21,"endColumn":20},{"ruleId":"152","severity":1,"message":"158","line":21,"column":22,"nodeType":"154","messageId":"155","endLine":21,"endColumn":27},{"ruleId":"152","severity":1,"message":"171","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":7,"column":19,"nodeType":"154","messageId":"155","endLine":7,"endColumn":27},{"ruleId":"148","replacedBy":"172"},{"ruleId":"150","replacedBy":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'setPosts' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'loginHandler' is assigned a value but never used.","'toggleHandler' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'Row' is defined but never used.","'message' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["174"],["175"],"'useDispatch' is defined but never used.",["174"],["175"],"no-global-assign","no-unsafe-negation"]