[{"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\index.js":"1","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\App.js":"2","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\HomeScreen.js":"3","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\LoginScreen.js":"4","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\components\\FormContainer.js":"5","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\SignupScreen.js":"6","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\store.js":"7","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\reducers\\UserReducers.js":"8","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\constants\\UserConstants.js":"9","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\actions\\userActions.js":"10","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\components\\Header.js":"11","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\ProfileScreen.js":"12"},{"size":336,"mtime":1608595803902,"results":"13","hashOfConfig":"14"},{"size":803,"mtime":1608721677992,"results":"15","hashOfConfig":"14"},{"size":609,"mtime":1608816036729,"results":"16","hashOfConfig":"14"},{"size":2198,"mtime":1608724739341,"results":"17","hashOfConfig":"14"},{"size":397,"mtime":1608554641979,"results":"18","hashOfConfig":"14"},{"size":3703,"mtime":1608815504587,"results":"19","hashOfConfig":"14"},{"size":1205,"mtime":1608815759565,"results":"20","hashOfConfig":"14"},{"size":2165,"mtime":1608813265617,"results":"21","hashOfConfig":"14"},{"size":778,"mtime":1608813106944,"results":"22","hashOfConfig":"14"},{"size":3700,"mtime":1608815456153,"results":"23","hashOfConfig":"14"},{"size":1987,"mtime":1608816033783,"results":"24","hashOfConfig":"14"},{"size":3977,"mtime":1608728676525,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1tcpp2b",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\index.js",[],["53","54"],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\App.js",[],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\HomeScreen.js",["55","56","57"],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\LoginScreen.js",["58"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push('/')\r\n        }\r\n    }, [userInfo, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n\r\n        <FormContainer>\r\n            <h1>Log In</h1>\r\n            {error && <h2>{error}</h2>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Login\r\n                    </Button>\r\n            </Form>\r\n            <Row>\r\n                <Col>\r\n                    Are you new here?{' '}<Link to='/signup'>Signup</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\SignupScreen.js",["59","60"],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\store.js",[],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\reducers\\UserReducers.js",[],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\constants\\UserConstants.js",[],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\components\\Header.js",["61"],"C:\\Users\\charlie\\Desktop\\social-media\\frontend\\src\\screens\\ProfileScreen.js",["62","63","64","65","66"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\n\r\n\r\n\r\nconst ProfileScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = () => {\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Col>\r\n            <FormContainer>\r\n                <h1>Profile</h1>\r\n                {success && <h1>{success}</h1>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter New Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmpassword'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n\r\n            </FormContainer>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":28,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"75","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":14},{"ruleId":"71","severity":1,"message":"76","line":7,"column":11,"nodeType":"73","messageId":"74","endLine":7,"endColumn":19},{"ruleId":"71","severity":1,"message":"77","line":16,"column":13,"nodeType":"73","messageId":"74","endLine":16,"endColumn":20},{"ruleId":"71","severity":1,"message":"77","line":20,"column":13,"nodeType":"73","messageId":"74","endLine":20,"endColumn":20},{"ruleId":"71","severity":1,"message":"78","line":20,"column":22,"nodeType":"73","messageId":"74","endLine":20,"endColumn":27},{"ruleId":"71","severity":1,"message":"79","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"75","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":14},{"ruleId":"71","severity":1,"message":"80","line":4,"column":24,"nodeType":"73","messageId":"74","endLine":4,"endColumn":27},{"ruleId":"71","severity":1,"message":"81","line":18,"column":12,"nodeType":"73","messageId":"74","endLine":18,"endColumn":19},{"ruleId":"71","severity":1,"message":"77","line":21,"column":13,"nodeType":"73","messageId":"74","endLine":21,"endColumn":20},{"ruleId":"71","severity":1,"message":"78","line":21,"column":22,"nodeType":"73","messageId":"74","endLine":21,"endColumn":27},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'dispatch' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'useEffect' is defined but never used.","'Row' is defined but never used.","'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]